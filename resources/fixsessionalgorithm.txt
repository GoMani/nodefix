
//Shahbaz Chaudhary
//shahbazc gmail com

//Persistent variables (survive session crash)
expectedInSeqNum = 1
expectedOutSeqNum = 1 (assume automatically set)

//Session level variables (do not survive session crash)
isLoggedIn = false;
isResendRequested = false;

timeOfLastIn = none
timeOfLastOut = none (assume automatically set)

sender = nothing
target = nothing
version = nothing

msg = valid message arrives
timeOfLastIn = now

//first message must be logon
if not isLoggedIn
    if msg is not [logon]
        ignore msg
        error "first message must be [logon]"
        disconnect connection
    else
        isAuth = authenticate(msg,remoteIP) //potentially blocking
        if <isAuth>
            isLoggedIn = true;
            sender = msg[senderCompID]
            target = msg[targetCompID]
            version = msg[version]
            archiveMsgs = getOldSession(version,sender,target) //potenetially blocking
            expectedInSeqnum = getExectedIn(archiveMsgs)
            expectedOutSeqnum = getExectedOut(archiveMsgs)
            scheduleTimer{
            	if currentTime - timeOfLastOut > heartBeat
            	    send heartbeat
            	
            	if currentTime - timeOfLastIn > heartBeat * 1.5
            	    send test request
            	
            	if currentTime - timeOfLastIn > heartBeat * 2
            	    error "no response to test request and no msgs from counter party in heartbeat * 2 seconds"
            	    disconnect connection
            }
            send [logon ack]
        else
            ignore msg
            error "unknown connection"
            disconnect connection
    

//record msg (needed for resend request)
record msg

//duplicate logon
if isLoggedIn and msg is [logon]
    ignore msg
    error "already logged in"
    send [session reject]

if msg is [sequence-reset] and gap-fill is undefined or N
    if newseqnum >= expectedInSeqNum
        expectedInSeqNum = newseqnum
    else
        ignore msg
        error "can't reduce seqnums! manual intervention needed"
        disconnect connection

//check seqnums
if inSeqNum = expectedInSeqNum
    increment expectedInSeqNum
    isResendRequested = false
else if inSeqNum < expectedInSeqNum and posdup is Y
    ignore msg
else if inSeqNum < expectedInSeqNum and posdup is undefined or N
    ignore msg
    error "manual intervention needed!"
    disconnect connection
else if inSeqNum > expectedInSeqNum
    ignore msg
    if msg is [resend-request]
        for list of requested messages from record
            if msg is [logon, logout, resendreq, heartbeat, testreq, seqreset]
                send [seq-reset] with gap-fill Y
            send msg with posdup = Y
    if isResendRequested is false
        isResendRequested = true
        send [resend-request] for missing messages

if msg is [sequence-reset] and gap-fill is Y
    if newseqnum >= expectedInSeqNum
        expectedinSeqNum = newseqnum
    else
        ignore msg
        error "can't reduce seqnums! manual intervention needed"
        disconnect connection

//check compids and version
if sender, target or version don't match
    ignore msg
    error "sender, target and version must match logon"
    send [session-reject]


//real session logic
if msg is [logon]
    every heartBeatInt seconds call
        if (now - timeOfLastOut) > heartBeatInt
            send [heartbeat]
        if (now - timeOfLastIn) > heartBeatInt
            send [test request]
        if (now - timeOfLastIn) > (1.5 * heartBeantInt)
            error "no heartbeats from counter party, time to die"
            disconnect session

if msg is [logout]
    send [logout ack]

if msg is [test request]
    send [heartbeat] with test request id

if msg is [resend request]
    for list of requested messages from record
        if msg is [logon, logout, resendreq, heartbeat, testreq, seqreset]
            send [seq-reset] with gap-fill Y
        send msg with posdup = Y
